{"version":3,"sources":["api/api.js","components/ContinentStats.js","utils/numberWithCommas.js","components/Map.js","components/AsiaMenu.js","components/EuropeMenu.js","components/AfricaMenu.js","components/OceaniaMenu.js","components/NorthAmericaMenu.js","components/Chart.js","components/SouthAmericaMenu.js","components/GlobalMenu.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","COUNTRY_URL","CONTINENT_URL","ContinentStats","toggleAsia","toggleEurope","toggleOceania","toggleNorthAmerica","toggleSouthAmerica","toggleAfrica","toggleGlobal","useState","continents","setContinents","useEffect","a","fetch","result","json","console","log","fetchContinents","getData","key","map","continent","style","right","height","position","Button","className","id","onClick","variant","numberWithCommas","x","toString","replace","mapboxgl","accessToken","Map","toggleInfo","mapContainerRef","useRef","lng","setLng","lat","setLat","zoom","setZoom","countries","setCountries","forEach","country","location","countryInfo","long","name","cases","active","deaths","flag","popup","Popup","setLngLat","setHTML","toUpperCase","setMaxWidth","addTo","el","document","createElement","radius","Marker","setPopup","fetchCountries","container","current","center","mag1","mag2","mag3","mag4","mag5","colors","createDonutChart","props","offsets","counts","total","count","push","fontSize","r","r0","Math","round","w","html","i","length","donutSegment","toLocaleString","innerHTML","firstChild","start","end","color","a0","PI","a1","x0","cos","y0","sin","x1","y1","largeArc","on","addSource","addLayer","markers","markersOnScreen","isSourceLoaded","newMarkers","features","querySourceFeatures","feature","coords","geometry","coordinates","properties","cluster","cluster_id","marker","element","remove","updateMarkers","e","queryRenderedFeatures","point","layers","clusterId","getSource","getClusterExpansionZoom","err","easeTo","doubleClickZoom","enable","getElementById","addEventListener","flyTo","essential","addControl","NavigationControl","getCenter","toFixed","getZoom","ref","EuropeMenu","state","list","countryNames","res","String","countryLabels","africanCountries","filter","africanCountry","substring","casesPerOneMillion","animationIn","animationOut","isVisible","Container","Row","Col","width","data","labels","datasets","label","backgroundColor","options","title","display","text","legend","colorsPie","AsiaMenu","AfricaMenu","africanCountryNames","africanCases","maintainAspectRatio","OceaniaMenu","setList","continentsArray","continentLabels","continentCountries","size","NorthAmericaMenu","this","border","Component","Chart","SouthAmericaMenu","continentCases","continentDeaths","continentActive","GlobalMenu","globalStats","setGlobalStats","fetchGlobalSummary","initialState","visible","info","facts","asia","northamerica","southamerica","europe","oceania","africa","global","App","setDefaultState","setState","toggleMap","toggleFacts","toggleRegion","india","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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IAMlB4J,EAAO,CACXC,OAAQxK,EAAWY,KAAI,SAACC,GAAD,OAAeA,EAAUF,MAChD8J,SAAU,CACR,CACEF,KAAMvK,EAAWY,KAAI,SAACC,GAAD,OAAgBA,EAAUkC,MAAM,OACrD4H,gBAAiBlG,KAOvB,OACE,6BACE,kBAAC,MAAD,CACE8F,KAAMA,MAYZ9F,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAC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","file":"static/js/main.0e90c31e.chunk.js","sourcesContent":["export const BASE_URL =  \"https://disease.sh/v2\";\r\nexport const GLOBAL_URL = BASE_URL + \"/all\";\r\nexport const COUNTRY_URL = BASE_URL + \"/countries\";\r\nexport const HISTORY_URL = BASE_URL + \"/historical?lastdays=all\";\r\nexport const GLOBAL_HISTORY_URL = BASE_URL + \"/historical/all?lastdays=all\";\r\nexport const CONTINENT_URL = BASE_URL + \"/continents\";\r\nexport const STATE_URL = BASE_URL + \"/states\";\r\nexport const DAILY_URL = \"https://covid19.mathdro.id/api/daily\";\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CONTINENT_URL } from \"../api/api\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst ContinentStats = ({toggleAsia, toggleEurope, toggleOceania, toggleNorthAmerica, toggleSouthAmerica, toggleAfrica, toggleGlobal}) => {\r\n\r\n\r\n  const [continents, setContinents] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchContinents() {\r\n      try {\r\n        const result = await fetch(CONTINENT_URL);\r\n        const continents = await result.json();\r\n        setContinents([...continents]);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetchContinents();\r\n  }, []);\r\n  const getData = (key) => {\r\n    return continents.map((continent) => continent[key]);\r\n  };\r\n  const continentLabels = getData(\"continent\");\r\n  const continentCases = getData(\"cases\");\r\n  // console.log('CC', continentCases);\r\n\r\n  const cases = continentCases;\r\n\r\n  const colors = [\r\n    \"#e76f51\",\r\n    \"#f4a261\",\r\n    \"#e9c46a\",\r\n    \"#2a9d8f\",\r\n    \"#CD5C5C\",\r\n    \"#264653\",\r\n  ];\r\n\r\n   const round = (value, precision) => {\r\n     var multiplier = Math.pow(10, precision || 2);\r\n     return Math.round(value * multiplier) / multiplier;\r\n   };\r\n\r\n  \r\n \r\n \r\n  return (\r\n    <div\r\n      style={{\r\n        right: \"110px\",\r\n        height: \"100vh\",\r\n        position: \"absolute\",\r\n      }}\r\n    >\r\n  \r\n      <Button\r\n        className=\"asia button\"\r\n        id=\"asia\"\r\n        onClick={toggleAsia}\r\n        // size=\"md\"\r\n        variant=\"outline-info\"\r\n        // className={getData(\"cases\")[1] / 1000000 <= 10 ? \"asia\" : \"asia2\"}\r\n      >\r\n        <h6>Asia</h6>\r\n        {/* {continentCases[1]} */}\r\n      </Button>\r\n\r\n      <Button\r\n        className=\"europe button\"\r\n        onClick={toggleEurope}\r\n        // size=\"sm\"\r\n        id=\"europe\"\r\n        variant=\"outline-info\"\r\n      >\r\n        <h6>Europe</h6>\r\n        {/* {continentCases[3]} */}\r\n      </Button>\r\n\r\n      <Button\r\n        className=\"northamerica button\"\r\n        onClick={toggleNorthAmerica}\r\n        // size=\"md\"\r\n        id=\"northamerica\"\r\n        variant=\"outline-info\"\r\n        // className={getData(\"cases\")[1] / 1000000 <= 10 ? \"asia\" : \"asia2\"}\r\n      >\r\n        <h6>North America</h6>\r\n        {/* {continentCases[0]} */}\r\n      </Button>\r\n\r\n      <Button\r\n        className=\"africa button\"\r\n        onClick={toggleAfrica}\r\n        // size=\"md\"\r\n        id=\"africa\"\r\n        variant=\"outline-info\"\r\n        // className={getData(\"cases\")[1] / 1000000 <= 10 ? \"asia\" : \"asia2\"}\r\n      >\r\n        <h6>Africa</h6>\r\n        {/* {continentCases[0]} */}\r\n      </Button>\r\n     \r\n\r\n      <Button\r\n        className=\"southamerica button\"\r\n        onClick={toggleSouthAmerica}\r\n        // size=\"md\"\r\n        id=\"southamerica\"\r\n        variant=\"outline-info\"\r\n        // color=\"info\"\r\n        // className={getData(\"cases\")[1] / 1000000 <= 10 ? \"asia\" : \"asia2\"}\r\n      >\r\n        <h6>South America</h6>\r\n        {/* {continentCases[0]} */}\r\n      </Button>\r\n\r\n      <Button\r\n        className=\"oceania button\"\r\n        onClick={toggleOceania}\r\n        // size=\"md\"\r\n        id=\"oceania\"\r\n        // variant=\"outline-info\"\r\n        variant=\"outline-info\"\r\n        // className={getData(\"cases\")[1] / 1000000 <= 10 ? \"asia\" : \"asia2\"}\r\n      >\r\n        <h6>\r\n          {/* <i className=\"fa fa-info-circle\"></i> */}\r\n          Oceania\r\n        </h6>\r\n        {/* {continentCases[0]} */}\r\n      </Button>\r\n\r\n      <Button\r\n        className=\"global button\"\r\n        onClick={toggleGlobal}\r\n        // size=\"md\"\r\n        id=\"global\"\r\n        // variant=\"outline-info\"\r\n        variant=\"outline-info\"\r\n        // className={getData(\"cases\")[1] / 1000000 <= 10 ? \"asia\" : \"asia2\"}\r\n      >\r\n        <h6>\r\n          {/* <i className=\"fa fa-info-circle\"></i> */}\r\n          Global\r\n        </h6>\r\n        {/* {continentCases[0]} */}\r\n      </Button>\r\n\r\n      {/* <SouthAmericaMenu\r\n        labels={continentLabels}\r\n        // colors={colors}\r\n        data={getData(\"cases\")}\r\n      ></SouthAmericaMenu> */}\r\n\r\n      {/* <a className=\"europe\" id=\"europe\" onClick={toggleInfo}>\r\n        <h6> {continentLabels[3]}</h6>\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n\r\n        <h6>{round(getData(\"cases\")[3] / 1000000) + \"m\"}</h6>\r\n      </a> */}\r\n      {/* <a className=\"southamerica\" id=\"southamerica\" onClick={toggleInfo}>\r\n        <h6> {continentLabels[2]}</h6>\r\n        {<i style={{ color: \"grey\" }} className=\"fa fa-male fa-4x\"></i>}\r\n        {<i style={{ color: \"grey\" }} className=\"fa fa-male fa-4x\"></i>}\r\n        {<i style={{ color: \"grey\" }} className=\"fa fa-male fa-4x\"></i>}\r\n        {<i style={{ color: \"grey\" }} className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i style={{ color: \"orangered\" }} className=\"fa fa-male fa-4x\"></i>}\r\n        <h6>{round(getData(\"cases\")[2] / 1000000) + \"m\"}</h6>\r\n      </a> */}\r\n\r\n      {/* <a className=\"africa\" id=\"africa\" onClick={toggleInfo}>\r\n        <h6> {continentLabels[4]}</h6>\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        <h6>{round(getData(\"cases\")[4] / 1000000) + \"m\"}</h6>\r\n      </a>\r\n      <a className=\"oceania\" id=\"oceania\" onClick={toggleInfo}>\r\n        <h6> Oceania</h6>\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        <h6>{round(getData(\"cases\")[5] / 1000000) + \"m\"}</h6>\r\n      </a> */}\r\n      {/* <a className=\"northamerica\" id=\"northamerica\" onClick={toggleInfo}>\r\n        <h6> {continentLabels[0]}</h6>\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        {<i className=\"fa fa-male fa-4x\"></i>}\r\n        <h6>{round(getData(\"cases\")[0] / 1000000) + \"m\"}</h6>\r\n      </a> */}\r\n      {/* <PieChart\r\n        labels={continentLabels}\r\n        colors={colors}\r\n        data={getData(\"cases\")}\r\n        options={options}\r\n      ></PieChart> */}\r\n      {/* <div>\r\n        <div\r\n          style={{\r\n            width: \"55%\",\r\n            position: \"absolute\",\r\n            left: \"49.5%\",\r\n            top: \"13.5%\",\r\n            opacity: \"0.67\",\r\n          }}\r\n        >\r\n         \r\n          <PieChart\r\n            labels={continentLabels}\r\n            colors={colors}\r\n            data={getData(\"cases\")}\r\n            options={options}\r\n          ></PieChart>\r\n        </div>\r\n      </div> */}\r\n      {/* <div>\r\n        <div style={{ width: \"100%\" }}>\r\n          <Continent\r\n            labels={continentLabels}\r\n            colors={colors}\r\n            data={getData(\"cases\")}\r\n          ></Continent>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n \r\n  );\r\n};\r\n\r\nexport default ContinentStats;\r\n\r\n","export function numberWithCommas(x) {\r\n  if (!x) return \"0\";\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"./Map.css\";\r\n\r\n\r\nimport { COUNTRY_URL } from \"../api/api\";\r\n\r\nimport { numberWithCommas } from \"../utils/numberWithCommas\";\r\n\r\n\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoibWFya3liMTUyIiwiYSI6ImNrZzJraGl1NTAwcjkyeXFyMHljNjExcmoifQ.RxhYWJnYveNc1LjK6wB9sQ\";\r\n\r\nconst Map = ({ toggleInfo }) => {\r\n  const mapContainerRef = useRef(null);\r\n\r\n  const [lng, setLng] = useState(0);\r\n  const [lat, setLat] = useState(20);\r\n  const [zoom, setZoom] = useState(1.7);\r\n\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchCountries() {\r\n      try {\r\n        const result = await fetch(COUNTRY_URL);\r\n        const countries = await result.json();\r\n        setCountries([...countries]);\r\n        // console.log(\"COUNTRIES\", countries);\r\n\r\n        countries.forEach((country) => {\r\n          const location = [country.countryInfo.long, country.countryInfo.lat];\r\n          const name = country.country;\r\n          const cases = country.cases;\r\n          const active = country.active;\r\n          const deaths = country.deaths;\r\n          const flag = country.countryInfo.flag;\r\n\r\n          // console.log(location, country, \"FLAG\", flag);\r\n\r\n          const popup = new mapboxgl.Popup({\r\n            className: \"popup\",\r\n          })\r\n            .setLngLat([location[0], location[1]])\r\n            .setHTML(\r\n              `\r\n            <img src=${flag} alt=\"\" width=\"90px\" height=\"50px\"></img><br />\r\n            <strong>${name.toUpperCase()}</strong><br/>\r\n            Cases: ${numberWithCommas(cases)}<br>\r\n            Active: ${numberWithCommas(active)}<br>\r\n            Deaths: ${numberWithCommas(deaths)}<br>\r\n           \r\n            `\r\n            )\r\n            .setMaxWidth(\"100px\")\r\n            .addTo(map);\r\n\r\n\r\n\r\n\r\n          // create a HTML element for each feature\r\n          var el = document.createElement(\"div\");\r\n          el.className = \"marker\";\r\n          el.style.radius = \"40px\";\r\n\r\n\r\n          // make a marker for each feature and add to the map\r\n          new mapboxgl.Marker(el)\r\n            .setLngLat([location[0], location[1]])\r\n\r\n\r\n            .setPopup(popup)\r\n            .addTo(map);\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetchCountries();\r\n\r\n    const map = new mapboxgl.Map({\r\n      container: mapContainerRef.current,\r\n      style: \"mapbox://styles/mapbox/dark-v10\",\r\n      center: [lng, lat],\r\n      zoom: zoom,\r\n    });\r\n\r\n    // filters for classifying earthquakes into five categories based on magnitude\r\n    const mag1 = ['<', ['get', 'mag'], 2];\r\n    const mag2 = ['all', ['>=', ['get', 'mag'], 2], ['<', ['get', 'mag'], 3]];\r\n    const mag3 = ['all', ['>=', ['get', 'mag'], 3], ['<', ['get', 'mag'], 4]];\r\n    const mag4 = ['all', ['>=', ['get', 'mag'], 4], ['<', ['get', 'mag'], 5]];\r\n    const mag5 = ['>=', ['get', 'mag'], 5];\r\n\r\n    // colors to use for the categories\r\n    const colors = [\r\n      \"#F26B38\",\r\n      \"#2F9599\",\r\n      \"purple\",\r\n      \"#A7226E\",\r\n      \"#EC2049\",\r\n    ];\r\n\r\n    map.on('load', () => {\r\n      // add a clustered GeoJSON source for a sample set of earthquakes\r\n      map.addSource('earthquakes', {\r\n        'type': 'geojson',\r\n        'data': 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\r\n        'cluster': true,\r\n        'clusterRadius': 80,\r\n        'clusterProperties': {\r\n          // keep separate counts for each magnitude category in a cluster\r\n          'mag1': ['+', ['case', mag1, 1, 0]],\r\n          'mag2': ['+', ['case', mag2, 1, 0]],\r\n          'mag3': ['+', ['case', mag3, 1, 0]],\r\n          'mag4': ['+', ['case', mag4, 1, 0]],\r\n          'mag5': ['+', ['case', mag5, 1, 0]]\r\n        }\r\n      });\r\n      // circle and symbol layers for rendering individual earthquakes (unclustered points)\r\n      map.addLayer({\r\n        'id': 'earthquake_circle',\r\n        'type': 'circle',\r\n        'source': 'earthquakes',\r\n        'filter': ['!=', 'cluster', true],\r\n        'paint': {\r\n          'circle-color': [\r\n            'case',\r\n            mag1,\r\n            colors[0],\r\n            mag2,\r\n            colors[1],\r\n            mag3,\r\n            colors[2],\r\n            mag4,\r\n            colors[3],\r\n            colors[4]\r\n          ],\r\n          'circle-opacity': 0.6,\r\n          'circle-radius': 12\r\n        }\r\n      });\r\n      map.addLayer({\r\n        'id': 'earthquake_label',\r\n        'type': 'symbol',\r\n        'source': 'earthquakes',\r\n        'filter': ['!=', 'cluster', true],\r\n        'layout': {\r\n          'text-field': [\r\n            'number-format',\r\n            ['get', 'mag'],\r\n            { 'min-fraction-digits': 1, 'max-fraction-digits': 1 }\r\n          ],\r\n          'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\r\n          'text-size': 10\r\n        },\r\n        'paint': {\r\n          'text-color': [\r\n            'case',\r\n            ['<', ['get', 'mag'], 3],\r\n            'black',\r\n            'white'\r\n          ]\r\n        }\r\n      });\r\n\r\n      // objects for caching and keeping track of HTML marker objects (for performance)\r\n      const markers = {};\r\n      let markersOnScreen = {};\r\n\r\n      function updateMarkers() {\r\n        const newMarkers = {};\r\n        const features = map.querySourceFeatures('earthquakes');\r\n\r\n        // for every cluster on the screen, create an HTML marker for it (if we didn't yet),\r\n        // and add it to the map if it's not there already\r\n        for (const feature of features) {\r\n          const coords = feature.geometry.coordinates;\r\n          const props = feature.properties;\r\n          if (!props.cluster) continue;\r\n          const id = props.cluster_id;\r\n\r\n          let marker = markers[id];\r\n          if (!marker) {\r\n            const el = createDonutChart(props);\r\n            marker = markers[id] = new mapboxgl.Marker({\r\n              element: el\r\n            }).setLngLat(coords);\r\n          }\r\n          newMarkers[id] = marker;\r\n\r\n          if (!markersOnScreen[id]) marker.addTo(map);\r\n        }\r\n        // for every marker we've added previously, remove those that are no longer visible\r\n        for (const id in markersOnScreen) {\r\n          if (!newMarkers[id]) markersOnScreen[id].remove();\r\n        }\r\n        markersOnScreen = newMarkers;\r\n      }\r\n\r\n      // after the GeoJSON data is loaded, update markers on the screen on every frame\r\n      map.on('render', () => {\r\n        if (!map.isSourceLoaded('earthquakes')) return;\r\n        updateMarkers();\r\n      });\r\n    });\r\n\r\n    // code for creating an SVG donut chart from feature properties\r\n    function createDonutChart(props) {\r\n      const offsets = [];\r\n      const counts = [\r\n        props.mag1,\r\n        props.mag2,\r\n        props.mag3,\r\n        props.mag4,\r\n        props.mag5\r\n      ];\r\n      let total = 0;\r\n      for (const count of counts) {\r\n        offsets.push(total);\r\n        total += count;\r\n      }\r\n      const fontSize =\r\n        total >= 1000 ? 22 : total >= 100 ? 20 : total >= 10 ? 18 : 16;\r\n      const r =\r\n        total >= 1000 ? 50 : total >= 100 ? 32 : total >= 10 ? 24 : 18;\r\n      const r0 = Math.round(r * 0.6);\r\n      const w = r * 2;\r\n\r\n      let html = `<div>\r\n<svg width=\"${w}\" height=\"${w}\" viewbox=\"0 0 ${w} ${w}\" text-anchor=\"middle\" style=\"font: ${fontSize}px sans-serif; display: block\">`;\r\n\r\n      for (let i = 0; i < counts.length; i++) {\r\n        html += donutSegment(\r\n          offsets[i] / total,\r\n          (offsets[i] + counts[i]) / total,\r\n          r,\r\n          r0,\r\n          colors[i]\r\n        );\r\n      }\r\n      html += `<circle cx=\"${r}\" cy=\"${r}\" r=\"${r0}\" fill=\"#212529\" />\r\n<text dominant-baseline=\"central\" transform=\"translate(${r}, ${r})\" fill=\"grey\">\r\n${total.toLocaleString()}\r\n</text>\r\n</svg>\r\n</div>`;\r\n\r\n      const el = document.createElement('div');\r\n      el.innerHTML = html;\r\n      return el.firstChild;\r\n    }\r\n\r\n    function donutSegment(start, end, r, r0, color) {\r\n      if (end - start === 1) end -= 0.00001;\r\n      const a0 = 2 * Math.PI * (start - 0.25);\r\n      const a1 = 2 * Math.PI * (end - 0.25);\r\n      const x0 = Math.cos(a0),\r\n        y0 = Math.sin(a0);\r\n      const x1 = Math.cos(a1),\r\n        y1 = Math.sin(a1);\r\n      const largeArc = end - start > 0.5 ? 1 : 0;\r\n\r\n      // draw an SVG path\r\n      return `<path d=\"M ${r + r0 * x0} ${r + r0 * y0} L ${r + r * x0} ${r + r * y0\r\n        } A ${r} ${r} 0 ${largeArc} 1 ${r + r * x1} ${r + r * y1} L ${r + r0 * x1\r\n        } ${r + r0 * y1} A ${r0} ${r0} 0 ${largeArc} 0 ${r + r0 * x0} ${r + r0 * y0\r\n        }\" fill=\"${color}\" />`;\r\n    }\r\n\r\n    // inspect a cluster on click\r\n    map.on('click', 'clusters', function (e) {\r\n      var features = map.queryRenderedFeatures(e.point, { layers: ['clusters'] });\r\n      var clusterId = features[0].properties.cluster_id;\r\n      map.getSource('earthquakes').getClusterExpansionZoom(clusterId, function (err, zoom) {\r\n        if (err)\r\n          return;\r\n\r\n        map.easeTo({\r\n          center: features[0].geometry.coordinates,\r\n          zoom: zoom\r\n        });\r\n      });\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    map.doubleClickZoom.enable();\r\n\r\n    document.getElementById(\"africa\").addEventListener(\"click\", function () {\r\n      map.flyTo({\r\n        zoom: 3,\r\n        center: [3.2, 1.8],\r\n        essential: true,\r\n      });\r\n    });\r\n\r\n    document.getElementById(\"europe\").addEventListener(\"click\", function () {\r\n      map.flyTo({\r\n        zoom: 4,\r\n        center: [6, 47],\r\n        essential: true,\r\n      });\r\n    });\r\n\r\n    document\r\n      .getElementById(\"northamerica\")\r\n      .addEventListener(\"click\", function () {\r\n        map.flyTo({\r\n          zoom: 3,\r\n          center: [-120, 45],\r\n          essential: true,\r\n        });\r\n      });\r\n\r\n    document\r\n      .getElementById(\"southamerica\")\r\n      .addEventListener(\"click\", function () {\r\n        map.flyTo({\r\n          zoom: 3.5,\r\n          center: [-74, -4],\r\n          essential: true,\r\n        });\r\n      });\r\n\r\n    document.getElementById(\"asia\").addEventListener(\"click\", function () {\r\n      map.flyTo({\r\n        zoom: 3.1,\r\n        center: [100, 17],\r\n        essential: true,\r\n      });\r\n    });\r\n\r\n    document.getElementById(\"oceania\").addEventListener(\"click\", function () {\r\n      map.flyTo({\r\n        zoom: 3.7,\r\n        center: [131, -28],\r\n        essential: true,\r\n      });\r\n    });\r\n\r\n    document.getElementById(\"global\").addEventListener(\"click\", function () {\r\n      map.flyTo({\r\n        zoom: 1.7,\r\n        center: [0, 20],\r\n        essential: true,\r\n      });\r\n    });\r\n\r\n\r\n\r\n    // Add navigation control (the +/- zoom buttons)\r\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n\r\n    map.on(\"move\", () => {\r\n      setLng(map.getCenter().lng.toFixed(4));\r\n      setLat(map.getCenter().lat.toFixed(4));\r\n      setZoom(map.getZoom().toFixed(2));\r\n    });\r\n    // Clean up on unmount\r\n    return () => map.remove();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const getData = (key) => {\r\n    return countries.map((country) => country[key]);\r\n  };\r\n  const countryLabels = getData(\"country\");\r\n\r\n  const round = (value, precision) => {\r\n    var multiplier = Math.pow(10, precision || 2);\r\n    return Math.round(value * multiplier) / multiplier;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className=\"sidebarStyle\">\r\n        {/* <div>\r\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n\r\n        </div> */}\r\n\r\n      </div>\r\n\r\n      <div className=\"map-container\" ref={mapContainerRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport { Button, Col, Row, Container } from \"react-bootstrap\";\r\n\r\nimport { numberWithCommas } from \"../utils/numberWithCommas\";\r\nimport { CONTINENT_URL, COUNTRY_URL } from \"../api/api\";\r\n\r\nimport { Pie, Doughnut, Bar, HorizontalBar } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nconst EuropeMenu = ({ state, toggleEurope }) => {\r\n  const [casesAsia, setCasesAsia] = useState([]);\r\n  const [cases, setCases] = useState([]);\r\n  const [list, setContinentNames] = useState([]);\r\n\r\n  const [countries, setCountries] = useState([]);\r\n  // const [countryNames, setCountryNames] = useState([]);\r\n  // const [continents, setContinents] = useState([]);\r\n  useEffect(() => {\r\n    // const continentsArray = [];\r\n    const countries = []\r\n    const countryNames = [];\r\n    async function fetchCountries() {\r\n      try {\r\n        // const result = await fetch(CONTINENT_URL);\r\n        const res = await fetch(COUNTRY_URL);\r\n\r\n        // const continents = await result.json();\r\n        // setContinents([...continents]);\r\n        // console.log(continents, 'continents')\r\n\r\n        const countries = await res.json();\r\n        setCountries([...countries]);\r\n        console.log(countries, 'countries')\r\n\r\n        // for (let i = 0; i < continents.length; i++) {\r\n        //   continentsArray.push(String(continents[i].continent))\r\n        // }\r\n        for (let i = 0; i < countries.length; i++) {\r\n          countryNames.push(String(countries[i].country))\r\n        }\r\n\r\n\r\n        // setContinentNames(continentsArray)\r\n        // console.log(continentsArray, 'continentsArray')\r\n        // setCountryNames(countryNames)\r\n        // console.log(countryNames, 'countryNames')\r\n        // const africanCountryNames = countries.filter(country.continent === \"Africa\");\r\n        // console.log(africanCountryNames, 'acn')\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    // fetchContinents();\r\n    fetchCountries();\r\n  }, []);\r\n  // const getData = (key) => {\r\n  //   return continents.map((continent) => continent[key]);\r\n  // };\r\n\r\n  const getData = (key) => {\r\n    return countries.map((country) => country[key]);\r\n  };\r\n\r\n  const countryLabels = getData(\"country\");\r\n  const countryCases = getData(\"cases\");\r\n  const countryDeaths = getData(\"deaths\");\r\n  const countryActive = getData(\"active\");\r\n  const casesMillion = getData(\"casesPerOneMillion\");\r\n  const activeMillion = getData(\"activePerOneMillion\");\r\n  const deathsMillion = getData(\"deathsPerOneMillion\");\r\n\r\n\r\n  const africanCountries = countries.filter(country => country.continent === 'Asia')\r\n\r\n  const countryNames = africanCountries.map(africanCountry => africanCountry.country.substring(0, 12))\r\n\r\n  const casesPerOneMillion = africanCountries.map(africanCountry => africanCountry.casesPerOneMillion)\r\n\r\n  const casesPerOneHundred = (casesPerOneMillion/10000);\r\n\r\n  console.log(countryNames, 'africanCountryNames')\r\n\r\n  console.log(africanCountries, 'affricanCountries')\r\n\r\n  console.log(countryLabels, 'countryLabels')\r\n\r\n  console.log(casesPerOneMillion, 'africanCases/100000000')\r\n\r\n\r\n  // const continentCountries = getData(\"countries\");\r\n  // console.log(continentCountries, 'continentCountries')\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={state ? \"visible\" : \"hidden\"}>\r\n        <Animated\r\n          animationIn=\"fadeInLeft\"\r\n          animationOut=\"fadeOut\"\r\n          isVisible={true}\r\n        >\r\n          <div className=\"App-side\">\r\n            <div className=\"App-side-menu\">\r\n\r\n              <div className={!state ? \"hidden\" : \"visible\"}>\r\n                <div className=\"App-side-button\">\r\n\r\n                  <Container>\r\n                    <Row>\r\n                      <Col >\r\n                        <HorizontalBar\r\n                          height={750}\r\n                          width={200}\r\n                          // options={{ maintainAspectRatio: false }}\r\n                          data={{\r\n                            labels: countryNames,\r\n                            datasets: [\r\n                              {\r\n                                label: \"CASES / MILLION\",\r\n                                data: casesPerOneMillion,\r\n                                backgroundColor: colors,\r\n                              }\r\n                            ]\r\n                          }}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col >\r\n                 \r\n                        <Doughnut\r\n                      \r\n                          width={150}\r\n                          options={{\r\n                            // maintainAspectRatio: true,\r\n                            title: {\r\n                              display: true,\r\n                              text: 'Asia',\r\n                              fontSize: 10\r\n                            },\r\n                            legend: {\r\n                              display: false,\r\n                              position: ''\r\n                            }\r\n                          }}\r\n                          data={{\r\n                            labels: list,\r\n                            datasets: [\r\n                              {\r\n                                label: \"continents\",\r\n                                data: [30, 80, 20, 60, 50],\r\n                                backgroundColor: colorsPie,\r\n                              }\r\n                            ]\r\n                          }}\r\n                        />      \r\n                      \r\n                          <Bar \r\n                            width={100}\r\n                            height={85}\r\n                            options={{\r\n                              // maintainAspectRatio: true,\r\n                              title: {\r\n                                display: true,\r\n                                text: 'Deaths Age',\r\n                                fontSize: 10\r\n                              },\r\n                              legend: {\r\n                                display: false,\r\n                                position: ''\r\n                              }\r\n                            }}\r\n                            data={{\r\n                              labels: [30, 80, 20, 60, 3, 10, 30],\r\n                              datasets: [\r\n                                {\r\n                                  label: \"continents\",\r\n                                  data: [30, 80, 20, 60, 3, 10, 15],\r\n                                  backgroundColor: \"#2F9599\",\r\n                                }\r\n                              ]\r\n                            }}\r\n                          />\r\n\r\n                          <Bar \r\n                            width={100}\r\n                            height={85}\r\n                            options={{\r\n                              // maintainAspectRatio: true,\r\n                              title: {\r\n                                display: true,\r\n                                text: 'Deaths Age',\r\n                                fontSize: 10\r\n                              },\r\n                              legend: {\r\n                                display: false,\r\n                                position: ''\r\n                              }\r\n                            }}\r\n                            data={{\r\n                              labels: [30, 80, 20, 60, 3, 10, 30],\r\n                              datasets: [\r\n                                {\r\n                                  label: \"continents\",\r\n                                  data: [30, 80, 20, 60, 3, 10, 15],\r\n                                  backgroundColor: \"#2F9599\",\r\n                                }\r\n                              ]\r\n                            }}\r\n                          />\r\n                       \r\n\r\n                            <Doughnut\r\n                              width={150}\r\n                              options={{\r\n                                // maintainAspectRatio: true,\r\n                                title: {\r\n                                  display: true,\r\n                                  text: 'Asia',\r\n                                  fontSize: 10\r\n                                },\r\n                                legend: {\r\n                                  display: false,\r\n                                  position: ''\r\n                                }\r\n                              }}\r\n                              data={{\r\n                                labels: list,\r\n                                datasets: [\r\n                                  {\r\n                                    label: \"continents\",\r\n                                    data: [30, 80, 20, 60, 20],\r\n                                    backgroundColor: colorsPie,\r\n                                  }\r\n                                ]\r\n                              }}\r\n                            /> \r\n                            </Col>   \r\n\r\n                    </Row>\r\n\r\n\r\n                  </Container>\r\n                  {/* <h4 style={{ color: \"cyan\" }}>Africa\r\n                  </h4> */}\r\n\r\n\r\n\r\n\r\n\r\n                  {/* \r\n                    */}\r\n\r\n\r\n                  {/* <p>\r\n                    Hover over the chart to view more details.\r\n                  </p> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Animated>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default EuropeMenu;\r\n\r\n\r\nlet colors = [\r\n\r\n  // \"#2F9599\",\r\n  // \"#2F9599\",\r\n  // \"#2F9599\",\r\n  // \"#2F9599\",\r\n  // \"#2F9599\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n\r\n\r\n];\r\n\r\nlet colorsPie = [\r\n  \"#A7226E\",\r\n  \"#EC2049\",\r\n  \"#F26B38\",\r\n  \"#F7DB4F\",\r\n  \"#2F9599\",\r\n  \"purple\",\r\n]\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport { Button, Col, Row, Container } from \"react-bootstrap\";\r\n\r\nimport { numberWithCommas } from \"../utils/numberWithCommas\";\r\nimport { CONTINENT_URL, COUNTRY_URL } from \"../api/api\";\r\n\r\nimport { Pie, Doughnut, Bar, HorizontalBar } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nconst AsiaMenu = ({ state, toggleAsia }) => {\r\n  const [casesAsia, setCasesAsia] = useState([]);\r\n  const [cases, setCases] = useState([]);\r\n  const [list, setContinentNames] = useState([]);\r\n\r\n  const [countries, setCountries] = useState([]);\r\n  // const [countryNames, setCountryNames] = useState([]);\r\n  // const [continents, setContinents] = useState([]);\r\n  useEffect(() => {\r\n    // const continentsArray = [];\r\n    const countries = []\r\n    const countryNames = [];\r\n    async function fetchCountries() {\r\n      try {\r\n        // const result = await fetch(CONTINENT_URL);\r\n        const res = await fetch(COUNTRY_URL);\r\n\r\n        // const continents = await result.json();\r\n        // setContinents([...continents]);\r\n        // console.log(continents, 'continents')\r\n\r\n        const countries = await res.json();\r\n        setCountries([...countries]);\r\n        console.log(countries, 'countries')\r\n\r\n        // for (let i = 0; i < continents.length; i++) {\r\n        //   continentsArray.push(String(continents[i].continent))\r\n        // }\r\n        for (let i = 0; i < countries.length; i++) {\r\n          countryNames.push(String(countries[i].country))\r\n        }\r\n\r\n\r\n        // setContinentNames(continentsArray)\r\n        // console.log(continentsArray, 'continentsArray')\r\n        // setCountryNames(countryNames)\r\n        // console.log(countryNames, 'countryNames')\r\n        // const africanCountryNames = countries.filter(country.continent === \"Africa\");\r\n        // console.log(africanCountryNames, 'acn')\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    // fetchContinents();\r\n    fetchCountries();\r\n  }, []);\r\n  // const getData = (key) => {\r\n  //   return continents.map((continent) => continent[key]);\r\n  // };\r\n\r\n  const getData = (key) => {\r\n    return countries.map((country) => country[key]);\r\n  };\r\n\r\n  const countryLabels = getData(\"country\");\r\n  const countryCases = getData(\"cases\");\r\n  const countryDeaths = getData(\"deaths\");\r\n  const countryActive = getData(\"active\");\r\n  const casesMillion = getData(\"casesPerOneMillion\");\r\n  const activeMillion = getData(\"activePerOneMillion\");\r\n  const deathsMillion = getData(\"deathsPerOneMillion\");\r\n\r\n\r\n  const africanCountries = countries.filter(country => country.continent === 'Europe')\r\n\r\n  const countryNames = africanCountries.map(africanCountry => africanCountry.country.substring(0, 12))\r\n\r\n  const casesPerOneMillion = africanCountries.map(africanCountry => africanCountry.casesPerOneMillion)\r\n\r\n  console.log(countryNames, 'africanCountryNames')\r\n\r\n  console.log(africanCountries, 'affricanCountries')\r\n\r\n  console.log(countryLabels, 'countryLabels')\r\n\r\n  console.log(casesPerOneMillion, 'africanCases')\r\n\r\n\r\n  // const continentCountries = getData(\"countries\");\r\n  // console.log(continentCountries, 'continentCountries')\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={state ? \"visible\" : \"hidden\"}>\r\n        <Animated\r\n          animationIn=\"fadeInLeft\"\r\n          animationOut=\"fadeOut\"\r\n          isVisible={true}\r\n        >\r\n          <div className=\"App-side\">\r\n            <div className=\"App-side-menu\">\r\n\r\n              <div className={!state ? \"hidden\" : \"visible\"}>\r\n                <div className=\"App-side-button\">\r\n\r\n                  <Container>\r\n                    <Row>\r\n                      <Col >\r\n                        <HorizontalBar\r\n                          height={750}\r\n                          width={200}\r\n                          // options={{ maintainAspectRatio: false }}\r\n                          data={{\r\n                            labels: countryNames,\r\n                            datasets: [\r\n                              {\r\n                                label: \"Cases per Million\",\r\n                                data: casesPerOneMillion,\r\n                                backgroundColor: colors,\r\n                              }\r\n                            ]\r\n                          }}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col >\r\n                 \r\n                        <Doughnut\r\n                      \r\n                          width={150}\r\n                          options={{\r\n                            // maintainAspectRatio: true,\r\n                            title: {\r\n                              display: true,\r\n                              text: 'Asia',\r\n                              fontSize: 10\r\n                            },\r\n                            legend: {\r\n                              display: false,\r\n                              position: ''\r\n                            }\r\n                          }}\r\n                          data={{\r\n                            labels: list,\r\n                            datasets: [\r\n                              {\r\n                                label: \"continents\",\r\n                                data: [30, 80, 20, 60, 50],\r\n                                backgroundColor: colorsPie,\r\n                              }\r\n                            ]\r\n                          }}\r\n                        />      \r\n                      \r\n                          <Bar \r\n                            width={100}\r\n                            height={85}\r\n                            options={{\r\n                              // maintainAspectRatio: true,\r\n                              title: {\r\n                                display: true,\r\n                                text: 'Deaths Age',\r\n                                fontSize: 10\r\n                              },\r\n                              legend: {\r\n                                display: false,\r\n                                position: ''\r\n                              }\r\n                            }}\r\n                            data={{\r\n                              labels: [30, 80, 20, 60, 3, 10, 30],\r\n                              datasets: [\r\n                                {\r\n                                  label: \"continents\",\r\n                                  data: [30, 80, 20, 60, 3, 10, 15],\r\n                                  backgroundColor: \"#2F9599\",\r\n                                }\r\n                              ]\r\n                            }}\r\n                          />\r\n\r\n                          <Bar \r\n                            width={100}\r\n                            height={85}\r\n                            options={{\r\n                              // maintainAspectRatio: true,\r\n                              title: {\r\n                                display: true,\r\n                                text: 'Deaths Age',\r\n                                fontSize: 10\r\n                              },\r\n                              legend: {\r\n                                display: false,\r\n                                position: ''\r\n                              }\r\n                            }}\r\n                            data={{\r\n                              labels: [30, 80, 20, 60, 3, 10, 30],\r\n                              datasets: [\r\n                                {\r\n                                  label: \"continents\",\r\n                                  data: [30, 80, 20, 60, 3, 10, 15],\r\n                                  backgroundColor: \"#2F9599\",\r\n                                }\r\n                              ]\r\n                            }}\r\n                          />\r\n                       \r\n\r\n                            <Doughnut\r\n                              width={150}\r\n                              options={{\r\n                                // maintainAspectRatio: true,\r\n                                title: {\r\n                                  display: true,\r\n                                  text: 'Asia',\r\n                                  fontSize: 10\r\n                                },\r\n                                legend: {\r\n                                  display: false,\r\n                                  position: ''\r\n                                }\r\n                              }}\r\n                              data={{\r\n                                labels: list,\r\n                                datasets: [\r\n                                  {\r\n                                    label: \"continents\",\r\n                                    data: [30, 80, 20, 60, 20],\r\n                                    backgroundColor: colorsPie,\r\n                                  }\r\n                                ]\r\n                              }}\r\n                            /> \r\n                            </Col>   \r\n\r\n                    </Row>\r\n\r\n\r\n                  </Container>\r\n                  {/* <h4 style={{ color: \"cyan\" }}>Africa\r\n                  </h4> */}\r\n\r\n\r\n\r\n\r\n\r\n                  {/* \r\n                    */}\r\n\r\n\r\n                  {/* <p>\r\n                    Hover over the chart to view more details.\r\n                  </p> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Animated>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default AsiaMenu;\r\n\r\n\r\nlet colors = [\r\n\r\n  \"#2F9599\",\r\n  \"#2F9599\",\r\n  \"#2F9599\",\r\n  \"#2F9599\",\r\n  \"#2F9599\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n\r\n\r\n];\r\n\r\nlet colorsPie = [\r\n  \"#A7226E\",\r\n  \"#EC2049\",\r\n  \"#F26B38\",\r\n  \"#F7DB4F\",\r\n  \"#2F9599\",\r\n  \"purple\",\r\n]\r\n\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { numberWithCommas } from \"../utils/numberWithCommas\";\r\nimport { CONTINENT_URL, COUNTRY_URL } from \"../api/api\";\r\n\r\nimport { Pie, Doughnut, Bar, HorizontalBar } from \"react-chartjs-2\";\r\n\r\nconst AfricaMenu = ({ state, toggleAfrica }) => {\r\n  const [casesAfrica, setCasesAfrica] = useState([]);\r\n  const [cases, setCases] = useState([]);\r\n  const [list, setContinentNames] = useState([]);\r\n\r\n  const [countries, setCountries] = useState([]);\r\n  const [countryNames, setCountryNames] = useState([]);\r\n  // const [continents, setContinents] = useState([]);\r\n  useEffect(() => {\r\n    // const continentsArray = [];\r\n    const countries = []\r\n    const countryNames = [];\r\n    async function fetchCountries() {\r\n      try {\r\n        // const result = await fetch(CONTINENT_URL);\r\n        const res = await fetch(COUNTRY_URL);\r\n\r\n        // const continents = await result.json();\r\n        // setContinents([...continents]);\r\n        // console.log(continents, 'continents')\r\n\r\n        const countries = await res.json();\r\n        setCountries([...countries]);\r\n        console.log(countries, 'countries')\r\n\r\n        // for (let i = 0; i < continents.length; i++) {\r\n        //   continentsArray.push(String(continents[i].continent))\r\n        // }\r\n        for (let i = 0; i < countries.length; i++) {\r\n          countryNames.push(String(countries[i].country))\r\n        }\r\n\r\n\r\n        // setContinentNames(continentsArray)\r\n        // console.log(continentsArray, 'continentsArray')\r\n        // setCountryNames(countryNames)\r\n        // console.log(countryNames, 'countryNames')\r\n        // const africanCountryNames = countries.filter(country.continent === \"Africa\");\r\n        // console.log(africanCountryNames, 'acn')\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    // fetchContinents();\r\n    fetchCountries();\r\n  }, []);\r\n  // const getData = (key) => {\r\n  //   return continents.map((continent) => continent[key]);\r\n  // };\r\n\r\n  const getData = (key) => {\r\n    return countries.map((country) => country[key]);\r\n  };\r\n\r\n  const countryLabels = getData(\"country\");\r\n  const countryCases = getData(\"cases\");\r\n  const countryDeaths = getData(\"deaths\");\r\n  const countryActive = getData(\"active\");\r\n  const casesMillion = getData(\"casesPerOneMillion\");\r\n  const activeMillion = getData(\"activePerOneMillion\");\r\n  const deathsMillion = getData(\"deathsPerOneMillion\");\r\n\r\n\r\n  const africanCountries = countries.filter(country => country.continent === 'Africa')\r\n\r\n  const africanCountryNames = africanCountries.map(africanCountry => africanCountry.country.substring(0, 10))\r\n\r\n  const africanCases = africanCountries.map(africanCountry => africanCountry.casesPerOneMillion)\r\n\r\n  console.log(africanCountryNames, 'africanCountryNames')\r\n\r\n  console.log(africanCountries, 'affricanCountries')\r\n\r\n  console.log(countryLabels, 'countryLabels')\r\n\r\n  console.log(africanCases, 'africanCases')\r\n\r\n\r\n  // const continentCountries = getData(\"countries\");\r\n  // console.log(continentCountries, 'continentCountries')\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={state ? \"visible\" : \"hidden\"}>\r\n        <Animated\r\n          animationIn=\"fadeInLeft\"\r\n          animationOut=\"fadeOut\"\r\n          isVisible={true}\r\n        >\r\n          <div className=\"App-side\">\r\n            <div className=\"App-side-menu\">\r\n\r\n              <div className={!state ? \"hidden\" : \"visible\"}>\r\n                <div className=\"App-side-button\">\r\n                  {/* <h4 style={{ color: \"cyan\" }}>Africa\r\n                  </h4> */}\r\n\r\n\r\n\r\n                  <HorizontalBar\r\n\r\n                    height={490}\r\n\r\n                    options={{ maintainAspectRatio: true }}\r\n                    data={{\r\n                      labels: africanCountryNames,\r\n                      datasets: [\r\n                        {\r\n                          label: \"Cases per Million\",\r\n                          data: africanCases,\r\n                          backgroundColor: colors,\r\n                        }\r\n                      ]\r\n                    }}\r\n\r\n                  />\r\n                  {/* <p>\r\n                    Hover over the chart to view more details.\r\n                  </p> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Animated>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default AfricaMenu;\r\n\r\n\r\nlet colors = [\r\n\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n\r\n\r\n];\r\n\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { numberWithCommas } from \"../utils/numberWithCommas\";\r\nimport { CONTINENT_URL } from \"../api/api\";\r\n\r\nimport { Pie, Doughnut, Bar, HorizontalBar } from \"react-chartjs-2\";\r\n\r\nconst OceaniaMenu = ({ state, toggleOceania }) => {\r\n  const [list, setList] = useState([]);\r\n\r\n  const [continents, setContinents] = useState([]);\r\n  useEffect(() => {\r\n    const continentsArray = [];\r\n    async function fetchContinents() {\r\n      try {\r\n        const result = await fetch(CONTINENT_URL);\r\n        const continents = await result.json();\r\n        setContinents([...continents]);\r\n        // console.log(continents, 'ok');\r\n        for (let i = 0; i < continents.length; i++) {\r\n          continentsArray.push(String(continents[i].continent))\r\n        }\r\n        setList(continentsArray)\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetchContinents();\r\n  }, []);\r\n  const getData = (key) => {\r\n    return continents.map((continent) => continent[key]);\r\n  };\r\n\r\n  const continentLabels = getData(\"continent\");\r\n  const continentCases = getData(\"cases\");\r\n  const continentDeaths = getData(\"deaths\");\r\n  const continentActive = getData(\"active\");\r\n  const casesMillion = getData(\"casesPerOneMillion\");\r\n  const activeMillion = getData(\"activePerOneMillion\");\r\n  const deathsMillion = getData(\"deathsPerOneMillion\");\r\n\r\n  // console.log(continentCases, 'cases')\r\n\r\n\r\n  const continentCountries = getData(\"countries\");\r\n\r\n  // const data = {\r\n  //   labels: ['Cases', 'Active', 'Deaths'],\r\n\r\n  //   datasets: [\r\n  //     {\r\n  //       data: [1,2,3],\r\n  //       backgroundColor: colors,\r\n  //     },\r\n  //   ],\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className={state ? \"visible\" : \"hidden\"}>\r\n        <Animated\r\n          animationIn=\"fadeInLeft\"\r\n          animationOut=\"fadeOut\"\r\n          isVisible={true}\r\n        >\r\n          <div className=\"App-side\">\r\n            <div className=\"App-side-menu\">\r\n\r\n              <div className={!state ? \"hidden\" : \"visible\"}>\r\n                <div className=\"App-side-button\">\r\n                  <h4 style={{ color: \"cyan\" }}>{continentLabels[4]}\r\n                    <Button\r\n                      onClick={toggleOceania}\r\n                      size=\"sm\"\r\n                      variant=\"outline-info\"\r\n                    // className=\"App-side-close\"\r\n                    >\r\n                      <Animated\r\n                        animationIn=\"fadeInDown\"\r\n                        animationOut=\"fadeOut\"\r\n                        isVisible={true}\r\n                      >\r\n                        <div>x</div>\r\n                      </Animated>\r\n                    </Button></h4>\r\n\r\n                    <p>{continentCountries[4]}</p>\r\n                    <p>{list}</p>\r\n                  <p>\r\n                    {/* {numberWithCommas((continentCases[4]))} Cases\r\n                    <br />\r\n                    {numberWithCommas(continentActive[4])} Active\r\n                    <br />\r\n                    {numberWithCommas(continentDeaths[4])} Deaths\r\n                    <br /> */}\r\n                  \r\n                    <br />\r\n                    {/* <Bar\r\n                      options={{\r\n                        maintainAspectRatio: true,\r\n                        title: {\r\n                          display: false,\r\n                          text: '',\r\n                          fontSize: 10\r\n                        },\r\n                        legend: {\r\n                          display: false,\r\n                          position: ''\r\n                        }\r\n                      }}\r\n                      data={{\r\n                        labels: list,\r\n                        datasets: [\r\n                          {\r\n                            label: \"continents\",\r\n                            data: [30, 80, 20, 60],\r\n                            backgroundColor: colors,\r\n                          }\r\n                        ]\r\n                      }}\r\n                    /> */}\r\n\r\n                    {/* {numberWithCommas(casesMillion[4])} Cases / Million\r\n                    <br />\r\n                    {numberWithCommas(activeMillion[4])} Active / Million\r\n                    <br />\r\n                    {numberWithCommas(deathsMillion[4])} Deaths / Million */}\r\n                  </p>\r\n\r\n                  <HorizontalBar\r\n                    // width={continentCases[1]/10000000}\r\n                    // height={200}\r\n\r\n                    options={{ maintainAspectRatio: true}}\r\n                    data={{\r\n                      labels: list,\r\n                      datasets: [\r\n                        {\r\n                          label: \"continents\",\r\n                          data: continents.map((continent) => (continent.cases / 1000000)),\r\n                          backgroundColor: colors,\r\n                        }\r\n                      ]\r\n                    }}\r\n\r\n                  />\r\n                  <p>\r\n                    Hover over the chart to view more details.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Animated>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default OceaniaMenu;\r\n\r\n\r\nlet colors = [\r\n  \"#A7226E\",\r\n  \"#EC2049\",\r\n  \"#F26B38\",\r\n  \"#F7DB4F\",\r\n  \"#2F9599\",\r\n  \"purple\",\r\n  \"#0d5ac1\",\r\n  \"#f205e6\",\r\n  \"#1c0365\",\r\n  \"#14a9ad\",\r\n  \"#4ca2f9\",\r\n  \"#a4e43f\",\r\n  \"#d298e2\",\r\n  \"#6119d0\",\r\n  \"#d2737d\",\r\n  \"#c0a43c\",\r\n  \"#f2510e\",\r\n  \"#651be6\",\r\n  \"#79806e\",\r\n  \"#61da5e\",\r\n  \"#cd2f00\",\r\n  \"#9348af\",\r\n  \"#01ac53\",\r\n  \"#c5a4fb\",\r\n  \"#996635\",\r\n  \"#b11573\",\r\n  \"#4bb473\",\r\n  \"#75d89e\",\r\n  \"#2f3f94\",\r\n  \"#2f7b99\",\r\n  \"#da967d\",\r\n  \"#34891f\",\r\n  \"#b0d87b\",\r\n  \"#ca4751\",\r\n  \"#7e50a8\",\r\n  \"#c4d647\",\r\n  \"#e0eeb8\",\r\n  \"#11dec1\",\r\n  \"#289812\",\r\n  \"#566ca0\",\r\n  \"#ffdbe1\",\r\n  \"#2f1179\",\r\n  \"#935b6d\",\r\n  \"#916988\",\r\n  \"#513d98\",\r\n  \"#aead3a\",\r\n  \"#9e6d71\",\r\n  \"#4b5bdc\",\r\n  \"#0cd36d\",\r\n  \"#250662\",\r\n  \"#cb5bea\",\r\n  \"#228916\",\r\n  \"#ac3e1b\",\r\n  \"#df514a\",\r\n  \"#539397\",\r\n  \"#880977\",\r\n  \"#f697c1\",\r\n  \"#ba96ce\",\r\n  \"#679c9d\",\r\n  \"#c6c42c\",\r\n  \"#5d2c52\",\r\n  \"#48b41b\",\r\n  \"#e1cf3b\",\r\n  \"#5be4f0\",\r\n  \"#57c4d8\",\r\n  \"#a4d17a\",\r\n  \"#225b8\",\r\n  \"#be608b\",\r\n  \"#96b00c\",\r\n  \"#088baf\",\r\n  \"#f158bf\",\r\n  \"#e145ba\",\r\n  \"#ee91e3\",\r\n  \"#05d371\",\r\n  \"#5426e0\",\r\n  \"#4834d0\",\r\n  \"#802234\",\r\n  \"#6749e8\",\r\n  \"#0971f0\",\r\n  \"#8fb413\",\r\n  \"#b2b4f0\",\r\n  \"#c3c89d\",\r\n  \"#c9a941\",\r\n  \"#41d158\",\r\n  \"#fb21a3\",\r\n  \"#51aed9\",\r\n  \"#5bb32d\",\r\n  \"#807fb\",\r\n  \"#21538e\",\r\n  \"#89d534\",\r\n  \"#d36647\",\r\n  \"#7fb411\",\r\n  \"#0023b8\",\r\n  \"#3b8c2a\",\r\n  \"#986b53\",\r\n  \"#f50422\",\r\n  \"#983f7a\",\r\n  \"#ea24a3\",\r\n  \"#79352c\",\r\n  \"#521250\",\r\n  \"#c79ed2\",\r\n  \"#d6dd92\",\r\n  \"#e33e52\",\r\n  \"#b2be57\",\r\n  \"#fa06ec\",\r\n  \"#1bb699\",\r\n  \"#6b2e5f\",\r\n  \"#64820f\",\r\n  \"#1c271\",\r\n  \"#21538e\",\r\n  \"#89d534\",\r\n  \"#d36647\",\r\n  \"#7fb411\",\r\n  \"#0023b8\",\r\n  \"#3b8c2a\",\r\n  \"#986b53\",\r\n  \"#f50422\",\r\n  \"#983f7a\",\r\n  \"#ea24a3\",\r\n  \"#79352c\",\r\n  \"#521250\",\r\n  \"#c79ed2\",\r\n  \"#d6dd92\",\r\n  \"#e33e52\",\r\n  \"#b2be57\",\r\n  \"#fa06ec\",\r\n  \"#1bb699\",\r\n  \"#6b2e5f\",\r\n  \"#64820f\",\r\n  \"#1c271\",\r\n  \"#9cb64a\",\r\n  \"#996c48\",\r\n  \"#9ab9b7\",\r\n  \"#06e052\",\r\n  \"#e3a481\",\r\n  \"#0eb621\",\r\n  \"#fc458e\",\r\n  \"#b2db15\",\r\n  \"#aa226d\",\r\n  \"#792ed8\",\r\n  \"#73872a\",\r\n  \"#520d3a\",\r\n  \"#cefcb8\",\r\n  \"#a5b3d9\",\r\n  \"#7d1d85\",\r\n  \"#c4fd57\",\r\n  \"#f1ae16\",\r\n  \"#8fe22a\",\r\n  \"#ef6e3c\",\r\n  \"#243eeb\",\r\n  \"#1dc18\",\r\n  \"#dd93fd\",\r\n  \"#3f8473\",\r\n  \"#e7dbce\",\r\n  \"#421f79\",\r\n  \"#7a3d93\",\r\n  \"#635f6d\",\r\n  \"#93f2d7\",\r\n  \"#9b5c2a\",\r\n  \"#15b9ee\",\r\n  \"#0f5997\",\r\n  \"#409188\",\r\n  \"#911e20\",\r\n  \"#1350ce\",\r\n  \"#10e5b1\",\r\n  \"#fff4d7\",\r\n  \"#cb2582\",\r\n  \"#ce00be\",\r\n  \"#32d5d6\",\r\n  \"#17232\",\r\n  \"#608572\",\r\n  \"#c79bc2\",\r\n  \"#00f87c\",\r\n  \"#77772a\",\r\n  \"#6995ba\",\r\n  \"#fc6b57\",\r\n  \"#f07815\",\r\n  \"#8fd883\",\r\n  \"#060e27\",\r\n  \"#96e591\",\r\n  \"#21d52e\",\r\n  \"#d00043\",\r\n  \"#b47162\",\r\n  \"#1ec227\",\r\n  \"#4f0f6f\",\r\n  \"#1d1d58\",\r\n  \"#947002\",\r\n  \"#bde052\",\r\n  \"#e08c56\",\r\n  \"#28fcfd\",\r\n  \"#bb09b\",\r\n  \"#36486a\",\r\n  \"#d02e29\",\r\n  \"#1ae6db\",\r\n  \"#3e464c\",\r\n  \"#a84a8f\",\r\n  \"#911e7e\",\r\n  \"#3f16d9\",\r\n  \"#0f525f\",\r\n  \"#ac7c0a\",\r\n  \"#b4c086\",\r\n  \"#c9d730\",\r\n  \"#30cc49\",\r\n  \"#3d6751\",\r\n  \"#fb4c03\",\r\n  \"#640fc1\",\r\n  \"#62c03e\",\r\n  \"#d3493a\",\r\n  \"#88aa0b\",\r\n  \"#406df9\",\r\n  \"#615af0\",\r\n  \"#4be47\",\r\n  \"#2a3434\",\r\n  \"#4a543f\",\r\n  \"#79bca0\",\r\n  \"#a8b8d4\",\r\n  \"#00efd4\",\r\n  \"#7ad236\",\r\n  \"#7260d8\",\r\n  \"#1deaa7\",\r\n  \"#06f43a\",\r\n  \"#823c59\",\r\n  \"#e3d94c\",\r\n  \"#dc1c06\",\r\n  \"#f53b2a\",\r\n  \"#b46238\",\r\n  \"#2dfff6\",\r\n  \"#a82b89\",\r\n  \"#1a8011\",\r\n  \"#436a9f\",\r\n  \"#1a806a\",\r\n  \"#4cf09d\",\r\n  \"#c188a2\",\r\n  \"#67eb4b\",\r\n  \"#b308d3\",\r\n  \"#fc7e41\",\r\n  \"#af3101\",\r\n  \"#ff065\",\r\n  \"#71b1f4\",\r\n  \"#a2f8a5\",\r\n  \"#e23dd0\",\r\n  \"#d3486d\",\r\n  \"#00f7f9\",\r\n  \"#474893\",\r\n  \"#3cec35\",\r\n  \"#1c65cb\",\r\n  \"#5d1d0c\",\r\n  \"#2d7d2a\",\r\n  \"#ff3420\",\r\n  \"#5cdd87\",\r\n  \"#a259a4\",\r\n  \"#e4ac44\",\r\n  \"#1bede6\",\r\n  \"#8798a4\",\r\n  \"#d7790f\",\r\n  \"#b2c24f\",\r\n  \"#de73c2\",\r\n  \"#d70a9c\",\r\n  \"#25b67\",\r\n  \"#88e9b8\",\r\n  \"#c2b0e2\",\r\n  \"#86e98f\",\r\n  \"#ae90e2\",\r\n  \"#1a806b\",\r\n  \"#436a9e\",\r\n  \"#0ec0ff\",\r\n  \"#f812b3\",\r\n  \"#b17fc9\",\r\n  \"#8d6c2f\",\r\n  \"#d3277a\",\r\n  \"#2ca1ae\",\r\n  \"#9685eb\",\r\n  \"#8a96c6\",\r\n  \"#dba2e6\",\r\n  \"#76fc1b\",\r\n  \"#608fa4\",\r\n  \"#20f6ba\",\r\n  \"#07d7f6\",\r\n  \"#dce77a\",\r\n  \"#77ecca\",\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport { Button, Col, Row, Container } from \"react-bootstrap\";\r\nimport ContinentStats from \"./ContinentStats\";\r\nimport { Pie, Doughnut, Bar, HorizontalBar } from \"react-chartjs-2\";\r\n\r\nclass NorthAmericaMenu extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n        <div className={this.props.state ? \"visible\" : \"hidden\"}>\r\n          <Animated\r\n            animationIn=\"fadeInLeft\"\r\n            animationOut=\"fadeOut\"\r\n            isVisible={true}\r\n          >\r\n\r\n            <div className=\"App-side\">\r\n              <div className=\"App-side-menu\">\r\n                <Container style={{ border: \"1px solid #fff\" }}>\r\n                  <Row style={{ border: \"1px solid #fff\" }}>\r\n                    <Col>    \r\n                    <HorizontalBar\r\n\r\n                      height={490}\r\n\r\n\r\n                      options={{ maintainAspectRatio: true }}\r\n                      data={{\r\n                        labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\r\n                        datasets: [\r\n                          {\r\n                            label: \"Cases per Million\",\r\n                            data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\r\n                            backgroundColor: colors,\r\n                          }\r\n                        ]\r\n                      }}\r\n\r\n                    /></Col>\r\n                    <Col>    <Doughnut\r\n                      height={300}\r\n                      options={{\r\n                        maintainAspectRatio: true,\r\n                        title: {\r\n                          display: false,\r\n                          text: '',\r\n                          fontSize: 10\r\n                        },\r\n                        legend: {\r\n                          display: false,\r\n                          position: ''\r\n                        }\r\n                      }}\r\n                      data={{\r\n                        labels: \"\",\r\n                        datasets: [\r\n                          {\r\n                            label: \"continents\",\r\n                            data: [30, 80, 20, 60],\r\n                            backgroundColor: colors,\r\n                          }\r\n                        ]\r\n                      }}\r\n                    />  </Col>\r\n                  </Row>\r\n                  <Row style={{ border: \"1px solid #fff\" }}>\r\n                    <Col>1 of 3</Col>\r\n                    <Col>2 of 3</Col>\r\n                    <Col>3 of 3</Col>\r\n                  </Row>\r\n                </Container>\r\n                <Button\r\n                  onClick={this.props.toggleNorthAmerica}\r\n                  size=\"sm\"\r\n                  variant=\"outline-light\"\r\n                  className=\"App-side-close\"\r\n                >\r\n                  <Animated\r\n                    animationIn=\"fadeInDown\"\r\n                    animationOut=\"fadeOut\"\r\n                    isVisible={true}\r\n                  >\r\n                    <div>x</div>\r\n                  </Animated>\r\n                </Button>\r\n                <div className={!this.props.state ? \"hidden\" : \"visible\"}>\r\n                  <div className=\"App-side-button\">\r\n                    <h4>North America</h4>\r\n\r\n                    {/* <Covid /> */}\r\n                    {/* <DataTable /> */}\r\n                    <p>\r\n\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n                      sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                      aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                      ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                    </p>\r\n\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n                      sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                      aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                      ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Animated>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NorthAmericaMenu;\r\n\r\n\r\n\r\n\r\nlet colors = [\r\n\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n  \"rgb(212, 23, 83)\",\r\n\r\n\r\n];\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nconst Chart = ({continents, key}) => {\r\n \r\n\r\n\r\n    // if (countries.length === 0) return <div></div>;\r\n\r\n    const data = {\r\n      labels: continents.map((continent) => continent[key]), //[]strings\r\n      datasets: [\r\n        {\r\n          data: continents.map((continent) => (continent.cases/1000000)),\r\n          backgroundColor: colors,\r\n        },\r\n      ],\r\n    };\r\n\r\n   \r\n\r\n    return (\r\n      <div>\r\n        <Pie\r\n          data={data}\r\n          // width={200}\r\n          // height={200}\r\n          // options={{ maintainAspectRatio: false }}\r\n        ></Pie>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default Chart;\r\n\r\nlet colors = [\r\n  \"#63b598\",\r\n  \"#ce7d78\",\r\n  \"#ea9e70\",\r\n  \"#a48a9e\",\r\n  \"#c6e1e8\",\r\n  \"#648177\",\r\n  \"#0d5ac1\",\r\n  \"#f205e6\",\r\n  \"#1c0365\",\r\n  \"#14a9ad\",\r\n  \"#4ca2f9\",\r\n  \"#a4e43f\",\r\n  \"#d298e2\",\r\n  \"#6119d0\",\r\n  \"#d2737d\",\r\n  \"#c0a43c\",\r\n  \"#f2510e\",\r\n  \"#651be6\",\r\n  \"#79806e\",\r\n  \"#61da5e\",\r\n  \"#cd2f00\",\r\n  \"#9348af\",\r\n  \"#01ac53\",\r\n  \"#c5a4fb\",\r\n  \"#996635\",\r\n  \"#b11573\",\r\n  \"#4bb473\",\r\n  \"#75d89e\",\r\n  \"#2f3f94\",\r\n  \"#2f7b99\",\r\n  \"#da967d\",\r\n  \"#34891f\",\r\n  \"#b0d87b\",\r\n  \"#ca4751\",\r\n  \"#7e50a8\",\r\n  \"#c4d647\",\r\n  \"#e0eeb8\",\r\n  \"#11dec1\",\r\n  \"#289812\",\r\n  \"#566ca0\",\r\n  \"#ffdbe1\",\r\n  \"#2f1179\",\r\n  \"#935b6d\",\r\n  \"#916988\",\r\n  \"#513d98\",\r\n  \"#aead3a\",\r\n  \"#9e6d71\",\r\n  \"#4b5bdc\",\r\n  \"#0cd36d\",\r\n  \"#250662\",\r\n  \"#cb5bea\",\r\n  \"#228916\",\r\n  \"#ac3e1b\",\r\n  \"#df514a\",\r\n  \"#539397\",\r\n  \"#880977\",\r\n  \"#f697c1\",\r\n  \"#ba96ce\",\r\n  \"#679c9d\",\r\n  \"#c6c42c\",\r\n  \"#5d2c52\",\r\n  \"#48b41b\",\r\n  \"#e1cf3b\",\r\n  \"#5be4f0\",\r\n  \"#57c4d8\",\r\n  \"#a4d17a\",\r\n  \"#225b8\",\r\n  \"#be608b\",\r\n  \"#96b00c\",\r\n  \"#088baf\",\r\n  \"#f158bf\",\r\n  \"#e145ba\",\r\n  \"#ee91e3\",\r\n  \"#05d371\",\r\n  \"#5426e0\",\r\n  \"#4834d0\",\r\n  \"#802234\",\r\n  \"#6749e8\",\r\n  \"#0971f0\",\r\n  \"#8fb413\",\r\n  \"#b2b4f0\",\r\n  \"#c3c89d\",\r\n  \"#c9a941\",\r\n  \"#41d158\",\r\n  \"#fb21a3\",\r\n  \"#51aed9\",\r\n  \"#5bb32d\",\r\n  \"#807fb\",\r\n  \"#21538e\",\r\n  \"#89d534\",\r\n  \"#d36647\",\r\n  \"#7fb411\",\r\n  \"#0023b8\",\r\n  \"#3b8c2a\",\r\n  \"#986b53\",\r\n  \"#f50422\",\r\n  \"#983f7a\",\r\n  \"#ea24a3\",\r\n  \"#79352c\",\r\n  \"#521250\",\r\n  \"#c79ed2\",\r\n  \"#d6dd92\",\r\n  \"#e33e52\",\r\n  \"#b2be57\",\r\n  \"#fa06ec\",\r\n  \"#1bb699\",\r\n  \"#6b2e5f\",\r\n  \"#64820f\",\r\n  \"#1c271\",\r\n  \"#21538e\",\r\n  \"#89d534\",\r\n  \"#d36647\",\r\n  \"#7fb411\",\r\n  \"#0023b8\",\r\n  \"#3b8c2a\",\r\n  \"#986b53\",\r\n  \"#f50422\",\r\n  \"#983f7a\",\r\n  \"#ea24a3\",\r\n  \"#79352c\",\r\n  \"#521250\",\r\n  \"#c79ed2\",\r\n  \"#d6dd92\",\r\n  \"#e33e52\",\r\n  \"#b2be57\",\r\n  \"#fa06ec\",\r\n  \"#1bb699\",\r\n  \"#6b2e5f\",\r\n  \"#64820f\",\r\n  \"#1c271\",\r\n  \"#9cb64a\",\r\n  \"#996c48\",\r\n  \"#9ab9b7\",\r\n  \"#06e052\",\r\n  \"#e3a481\",\r\n  \"#0eb621\",\r\n  \"#fc458e\",\r\n  \"#b2db15\",\r\n  \"#aa226d\",\r\n  \"#792ed8\",\r\n  \"#73872a\",\r\n  \"#520d3a\",\r\n  \"#cefcb8\",\r\n  \"#a5b3d9\",\r\n  \"#7d1d85\",\r\n  \"#c4fd57\",\r\n  \"#f1ae16\",\r\n  \"#8fe22a\",\r\n  \"#ef6e3c\",\r\n  \"#243eeb\",\r\n  \"#1dc18\",\r\n  \"#dd93fd\",\r\n  \"#3f8473\",\r\n  \"#e7dbce\",\r\n  \"#421f79\",\r\n  \"#7a3d93\",\r\n  \"#635f6d\",\r\n  \"#93f2d7\",\r\n  \"#9b5c2a\",\r\n  \"#15b9ee\",\r\n  \"#0f5997\",\r\n  \"#409188\",\r\n  \"#911e20\",\r\n  \"#1350ce\",\r\n  \"#10e5b1\",\r\n  \"#fff4d7\",\r\n  \"#cb2582\",\r\n  \"#ce00be\",\r\n  \"#32d5d6\",\r\n  \"#17232\",\r\n  \"#608572\",\r\n  \"#c79bc2\",\r\n  \"#00f87c\",\r\n  \"#77772a\",\r\n  \"#6995ba\",\r\n  \"#fc6b57\",\r\n  \"#f07815\",\r\n  \"#8fd883\",\r\n  \"#060e27\",\r\n  \"#96e591\",\r\n  \"#21d52e\",\r\n  \"#d00043\",\r\n  \"#b47162\",\r\n  \"#1ec227\",\r\n  \"#4f0f6f\",\r\n  \"#1d1d58\",\r\n  \"#947002\",\r\n  \"#bde052\",\r\n  \"#e08c56\",\r\n  \"#28fcfd\",\r\n  \"#bb09b\",\r\n  \"#36486a\",\r\n  \"#d02e29\",\r\n  \"#1ae6db\",\r\n  \"#3e464c\",\r\n  \"#a84a8f\",\r\n  \"#911e7e\",\r\n  \"#3f16d9\",\r\n  \"#0f525f\",\r\n  \"#ac7c0a\",\r\n  \"#b4c086\",\r\n  \"#c9d730\",\r\n  \"#30cc49\",\r\n  \"#3d6751\",\r\n  \"#fb4c03\",\r\n  \"#640fc1\",\r\n  \"#62c03e\",\r\n  \"#d3493a\",\r\n  \"#88aa0b\",\r\n  \"#406df9\",\r\n  \"#615af0\",\r\n  \"#4be47\",\r\n  \"#2a3434\",\r\n  \"#4a543f\",\r\n  \"#79bca0\",\r\n  \"#a8b8d4\",\r\n  \"#00efd4\",\r\n  \"#7ad236\",\r\n  \"#7260d8\",\r\n  \"#1deaa7\",\r\n  \"#06f43a\",\r\n  \"#823c59\",\r\n  \"#e3d94c\",\r\n  \"#dc1c06\",\r\n  \"#f53b2a\",\r\n  \"#b46238\",\r\n  \"#2dfff6\",\r\n  \"#a82b89\",\r\n  \"#1a8011\",\r\n  \"#436a9f\",\r\n  \"#1a806a\",\r\n  \"#4cf09d\",\r\n  \"#c188a2\",\r\n  \"#67eb4b\",\r\n  \"#b308d3\",\r\n  \"#fc7e41\",\r\n  \"#af3101\",\r\n  \"#ff065\",\r\n  \"#71b1f4\",\r\n  \"#a2f8a5\",\r\n  \"#e23dd0\",\r\n  \"#d3486d\",\r\n  \"#00f7f9\",\r\n  \"#474893\",\r\n  \"#3cec35\",\r\n  \"#1c65cb\",\r\n  \"#5d1d0c\",\r\n  \"#2d7d2a\",\r\n  \"#ff3420\",\r\n  \"#5cdd87\",\r\n  \"#a259a4\",\r\n  \"#e4ac44\",\r\n  \"#1bede6\",\r\n  \"#8798a4\",\r\n  \"#d7790f\",\r\n  \"#b2c24f\",\r\n  \"#de73c2\",\r\n  \"#d70a9c\",\r\n  \"#25b67\",\r\n  \"#88e9b8\",\r\n  \"#c2b0e2\",\r\n  \"#86e98f\",\r\n  \"#ae90e2\",\r\n  \"#1a806b\",\r\n  \"#436a9e\",\r\n  \"#0ec0ff\",\r\n  \"#f812b3\",\r\n  \"#b17fc9\",\r\n  \"#8d6c2f\",\r\n  \"#d3277a\",\r\n  \"#2ca1ae\",\r\n  \"#9685eb\",\r\n  \"#8a96c6\",\r\n  \"#dba2e6\",\r\n  \"#76fc1b\",\r\n  \"#608fa4\",\r\n  \"#20f6ba\",\r\n  \"#07d7f6\",\r\n  \"#dce77a\",\r\n  \"#77ecca\",\r\n];\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { numberWithCommas } from \"../utils/numberWithCommas\";\r\nimport { CONTINENT_URL } from \"../api/api\";\r\n\r\nimport Chart from './Chart'\r\n\r\nconst SouthAmericaMenu = ({ state, toggleSouthAmerica }) => {\r\n\r\n  const [continents, setContinents] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchContinents() {\r\n      try {\r\n        const result = await fetch(CONTINENT_URL);\r\n        const continents = await result.json();\r\n        setContinents([...continents]);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetchContinents();\r\n  }, []);\r\n  const getData = (key) => {\r\n    return continents.map((continent) => continent[key]);\r\n  };\r\n  const continentLabels = getData(\"continent\");\r\n  const continentCases = getData(\"cases\");\r\n  const continentDeaths = getData(\"deaths\");\r\n  const continentActive = getData(\"active\");\r\n\r\n  return (\r\n    <>\r\n      <div className={state ? \"visible\" : \"hidden\"}>\r\n        <Animated\r\n          animationIn=\"fadeInLeft\"\r\n          animationOut=\"fadeOut\"\r\n          isVisible={true}\r\n        >\r\n          <div className=\"App-side\">\r\n            <div className=\"App-side-menu\">\r\n              <Button\r\n                onClick={toggleSouthAmerica}\r\n                size=\"sm\"\r\n              // variant=\"outlined\"\r\n              // className=\"App-side-close\"\r\n              >\r\n                <Animated\r\n                  animationIn=\"fadeInDown\"\r\n                  animationOut=\"fadeOut\"\r\n                  isVisible={true}\r\n                >\r\n                  <div>x</div>\r\n                </Animated>\r\n              </Button>\r\n              <div className={!state ? \"hidden\" : \"visible\"}>\r\n                <div className=\"App-side-button\">\r\n                  <h4>South America</h4>\r\n\r\n                  <h5>\r\n                    {numberWithCommas(continentCases[3])} Cases\r\n                    <br />\r\n                    {numberWithCommas(continentActive[3])} Active\r\n                    <br />\r\n                    {numberWithCommas(continentDeaths[3])} Deaths\r\n                  </h5>\r\n                  <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\r\n                    do eiusmod tempor incididunt ut labore et dolore magna\r\n                    aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                    ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                  </p>\r\n                  <Chart continents={continents} />\r\n                  <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\r\n                    do eiusmod tempor incididunt ut labore et dolore magna\r\n                    aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                    ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Animated>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default SouthAmericaMenu;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { GLOBAL_URL } from \"../api/api\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { numberWithCommas } from \"../utils/numberWithCommas\";\r\n\r\n\r\nconst GlobalMenu = ({ props, state, toggleGlobal }) => {\r\n  const [globalStats, setGlobalStats] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchGlobalSummary() {\r\n      try {\r\n        const result = await fetch(GLOBAL_URL);\r\n        const globalStats = await result.json();\r\n        setGlobalStats({ ...globalStats });\r\n        // props.updated(globalStats[\"updated\"]);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetchGlobalSummary();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={state ? \"visible\" : \"hidden\"}>\r\n        <Animated\r\n          animationIn=\"slideInLeft\"\r\n          animationOut=\"slideOutLeft\"\r\n          isVisible={true}\r\n        >\r\n          <div className=\"App-side\">\r\n            <div className=\"App-side-menu\">\r\n           \r\n              <div className={!state ? \"hidden\" : \"visible\"}>\r\n                <div className=\"App-side-button\">\r\n                  <h4>Global Summary</h4>\r\n\r\n                  <h5>\r\n                    {\" \"}\r\n                    {\r\n                      <i className=\"fa fa-male\" style={{ color: \"#fff\" }}></i>\r\n                    }{\" \"}\r\n                    {numberWithCommas(globalStats.cases)} Cases\r\n            <br />\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }{\" \"}\r\n                    {numberWithCommas(globalStats.active)} Active\r\n                    <br />\r\n                    {<i className=\"fa fa-male\" style={{ color: \"red\" }}></i>}{\" \"}\r\n                    {numberWithCommas(globalStats.deaths)} Deaths{\" \"}\r\n                  </h5>{\" \"}\r\n                  <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n                    sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                    aliqua.\r\n                  </p>\r\n\r\n                  <p>\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }\r\n\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"orange\" }}\r\n                      ></i>\r\n                    }\r\n                    {\r\n                      <i\r\n                        className=\"fa fa-male fa-2x\"\r\n                        style={{ color: \"red\" }}\r\n                      ></i>\r\n                    }\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    <br />\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    <br />\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                    {<i className=\"fa fa-male fa-2x\"></i>}\r\n                  </p>\r\n                  {/* <Covid /> */}\r\n                  {/* <DataTable /> */}\r\n                  {/* <BarGraph /> */}\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Animated>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default GlobalMenu;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport ContinentStats from \"./components/ContinentStats\";\r\nimport Map from './components/Map';\r\nimport AsiaMenu from \"./components/AsiaMenu\";\r\nimport EuropeMenu from \"./components/EuropeMenu\";\r\nimport AfricaMenu from \"./components/AfricaMenu\";\r\nimport OceaniaMenu from \"./components/OceaniaMenu\";\r\nimport NorthAmericaMenu from \"./components/NorthAmericaMenu\";\r\nimport SouthAmericaMenu from \"./components/SouthAmericaMenu\";\r\nimport GlobalMenu from \"./components/GlobalMenu\";\r\n\r\n\r\nlet initialState = {\r\n  visible: true,\r\n  info: false,\r\n  facts: false,\r\n  asia: false,\r\n  northamerica: false,\r\n  southamerica: false,\r\n  europe: false,\r\n  oceania: false,\r\n  africa: false,\r\n  global: false\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n\r\n  // Set state to default state\r\n  setDefaultState = () => {\r\n    this.setState({\r\n      ...initialState,\r\n    });\r\n  };\r\n\r\n  toggleMap = () => {\r\n    this.setState({\r\n      ...initialState,\r\n      visible: !this.state.visible,\r\n    });\r\n  };\r\n\r\n  toggleFacts = () => {\r\n    this.setState({\r\n      ...initialState,\r\n      facts: !this.state.facts,\r\n    });\r\n  };\r\n\r\n  toggleInfo = () => {\r\n    this.setState({\r\n      ...initialState,\r\n      info: !this.state.info,\r\n    });\r\n  };\r\n\r\n  toggleRegion = () => {\r\n    this.setState({\r\n      ...initialState,\r\n      india: !this.state.india,\r\n    });\r\n  };\r\n\r\n  toggleAsia = () => {\r\n    this.setState({\r\n      ...initialState,\r\n      asia: !this.state.asia,\r\n    });\r\n  };\r\n\r\n  toggleOceania = () => {\r\n    this.setState({\r\n      ...initialState,\r\n      oceania: !this.state.oceania,\r\n    });\r\n  };\r\n\r\n  toggleEurope = () => {\r\n    this.setState({\r\n      ...initialState,\r\n      europe: !this.state.europe,\r\n    });\r\n  };\r\n\r\n  toggleAfrica = () => {\r\n    this.setState({\r\n      ...initialState,\r\n      africa: !this.state.africa,\r\n    });\r\n  };\r\n\r\n  toggleSouthAmerica = () => {\r\n    this.setState({\r\n      ...initialState,\r\n      southamerica: !this.state.southamerica,\r\n    });\r\n  };\r\n\r\n  toggleNorthAmerica = () => {\r\n    this.setState({\r\n      ...initialState,\r\n      northamerica: !this.state.northamerica,\r\n    });\r\n  };\r\n\r\n  toggleGlobal = () => {\r\n    this.setState({\r\n      ...initialState,\r\n      global: !this.state.global,\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <Map />\r\n        <ContinentStats\r\n          toggleGlobal={this.toggleGlobal}\r\n          toggleAsia={this.toggleAsia}\r\n          toggleOceania={this.toggleOceania}\r\n          toggleAfrica={this.toggleAfrica}\r\n          toggleEurope={this.toggleEurope}\r\n          toggleNorthAmerica={this.toggleNorthAmerica}\r\n          toggleSouthAmerica={this.toggleSouthAmerica}\r\n        />\r\n\r\n        <div className=\"map\">\r\n          <div className=\"grid\">\r\n            <AsiaMenu\r\n              state={this.state.asia}\r\n              toggleAsia={this.toggleAsia}\r\n              name=\"Asia\"\r\n            />\r\n            <EuropeMenu\r\n              state={this.state.europe}\r\n              toggleEurope={this.toggleEurope}\r\n            />\r\n            <AfricaMenu\r\n              state={this.state.africa}\r\n              toggleAfrica={this.toggleAfrica}\r\n            />\r\n            <OceaniaMenu\r\n              state={this.state.oceania}\r\n              toggleOceania={this.toggleOceania}\r\n            />\r\n            <NorthAmericaMenu\r\n              state={this.state.northamerica}\r\n              toggleNorthAmerica={this.toggleNorthAmerica}\r\n            />\r\n            <SouthAmericaMenu\r\n              state={this.state.southamerica}\r\n              toggleSouthAmerica={this.toggleSouthAmerica}\r\n            />\r\n            <GlobalMenu\r\n              state={this.state.global}\r\n              toggleGlobal={this.toggleGlobal}\r\n            />\r\n\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}